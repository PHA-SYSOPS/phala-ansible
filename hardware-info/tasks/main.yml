---
  - name: Collect motherboard information (vendor)
    command: "cat /sys/devices/virtual/dmi/id/board_vendor" 
    register: board_vendor

  - name: Collect motherboard information (model)
    command: "cat /sys/devices/virtual/dmi/id/board_name"
    register: board_name

  - name: Collect motherboard information (serial)
    command: "cat /sys/devices/virtual/dmi/id/board_serial"
    register: board_serial

  - name: Create installation directory
    file:
      path={{ install_path }}
      state=directory
      mode=0755

  - name: Copy prebuilt Intel SGX installers
    action: copy
    args:
      src: "{{ role_path }}/files/{{ item }}"
      dest: "{{ install_path }}/{{ item }}"
      owner: root
      group: root
      mode: 0755
      backup: no
    with_items:
      - oesgx
      - sgx_enable
      - sgx_test

  - name: Enabling SGX in BIOS
    command: "{{ install_path }}/sgx_enable"
    register: sgx_enable_result

  - debug: msg={{ sgx_enable_result.stdout_lines }}

  - name: Rebooting to finish required changes to enable SGX in BIOS
    reboot:
      msg: "Reboot initiated by Ansible due to enable SGX in BIOS"
      connect_timeout: 5
      reboot_timeout: 300
      pre_reboot_delay: 0
      post_reboot_delay: 30
      test_command: uptime
    when: sgx_enable_result.stdout_lines is search('will be enabled after the system is rebooted') or
          sgx_enable_result.stdout_lines is search('Please reboot your system to finish')

  - name: Collect CPU information
    command: "{{ install_path }}/oesgx"
    register: oesgx

  - debug:
      msg:
      - "Operating System:           {{ ansible_facts['lsb']['description'] }} ({{ ansible_facts['lsb']['codename'] }}) with architecture {{ ansible_facts['architecture'] }}"
      - "Kernel:                     {{ ansible_facts['kernel'] }}"
      - "System date and time:       {{ ansible_facts['date_time']['iso8601'] }} in timezone {{ ansible_facts['date_time']['tz'] }} {{ ansible_facts['date_time']['tz_offset'] }}"
      - "Motherboard:                {{ board_vendor.stdout }} {{ board_name.stdout }} serial {{ board_serial.stdout }} with BIOS version {{ ansible_facts['bios_version'] }} from {{ ansible_facts['bios_date'] }}"
      - "Processor:                  {{ ansible_facts['processor'][1] }} {{ ansible_facts['processor'][2] }} with {{ ansible_facts['processor_count'] }} socket(s) and {{ ansible_facts['processor_cores'] }} core(s)"
      - "Memory:                     {{ ansible_facts['memtotal_mb'] }}mb available for Operating System"
      - "CPU modes:	             {{ oesgx.stdout_lines }}"

